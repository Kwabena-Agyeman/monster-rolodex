{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.component.jsx","components/search-box/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","searchField","type","value","onChange","e","App","state","setState","target","fetch","then","res","json","data","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAaeA,EAVF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA6C,EAAnBF,EAAMG,QAAQC,GAAxC,0BAAwEC,IAAI,YACpF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCMTC,EAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GACnB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCYnBO,G,MAjBG,SAACX,GACjB,IAAQY,EAA2CZ,EAA3CY,YAAaC,EAA8Bb,EAA9Ba,aAAcC,EAAgBd,EAAhBc,YACnC,OACE,8BACE,uBACEb,UAAU,SACVc,KAAK,SACLC,MAAOF,EACPF,YAAaA,EACbK,SAAU,SAACC,GACTL,EAAaK,UC4BRC,G,kNAnCbC,MAAQ,CACNX,SAAU,GACVK,YAAa,I,EAafD,aAAe,SAACK,GACd,EAAKG,SAAS,CAAEP,YAAaI,EAAEI,OAAON,S,uDAXxC,WAAqB,IAAD,OAClBO,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACL,OAAO,EAAKN,SAAS,CAAEZ,SAAUkB,S,oBAQvC,WACE,MAAkCC,KAAKR,MAA/BX,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,YAEZe,EAAmBpB,EAASqB,QAAO,SAAC3B,GACxC,OAAOA,EAAQG,KAAKyB,cAAcC,SAASlB,EAAYiB,kBAEzD,OACE,sBAAK9B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWW,YAAa,kBAAmBE,YAAaA,EAAaD,aAAce,KAAKf,eACxF,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7251a804.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img src={`https://robohash.org/${props.monster.id * 8}?set=set2&size=150x150`} alt='profile' />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './cardList.styles.css';\r\nimport Card from '../card/Card.component';\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {props.monsters.map((monster) => {\r\n        return <Card key={monster.id} monster={monster} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = (props) => {\r\n  const { placeholder, handleChange, searchField } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        className='search'\r\n        type='search'\r\n        value={searchField}\r\n        placeholder={placeholder}\r\n        onChange={(e) => {\r\n          handleChange(e);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\nimport CardList from './components/card-list/CardList.component.jsx';\nimport SearchBox from './components/search-box/SearchBox.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: '',\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        return this.setState({ monsters: data });\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return (\n      <div className='App'>\n        <h1> Monsters Rolodex </h1>\n        <SearchBox placeholder={'Search Monsters'} searchField={searchField} handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}